include ../quick-access/quick-access

mixin rheader(data)
  - data = JSON.parse(JSON.stringify(data)) // clone the data object
  - data.modifiers = data.modifiers || []
  if data.arrondissement
    - data.modifiers.push("arrondissement")
    - data.modifiers.push("arrondissement-" + data.arrondissement)
    - var districtsConfig = {};
    - districtsConfig[1] =  {modifiers: ["light-blue", "text-red",    "logo-square"]}
    - districtsConfig[2] =  {modifiers: ["green",      "text-white",  "logo-square"]}
    - districtsConfig[3] =  {modifiers: ["green",      "text-white"]}
    - districtsConfig[4] =  {modifiers: ["yellow",     "text-blue",   "logo-square"]}
    - districtsConfig[5] =  {modifiers: ["dark-blue",  "text-white",  "logo-rectangle"]}
    - districtsConfig[6] =  {modifiers: ["dark-blue",  "text-white",  "logo-square"]}
    - districtsConfig[7] =  {modifiers: ["light-blue", "text-red",    "logo-square"]}
    - districtsConfig[8] =  {modifiers: ["dark-blue",  "text-white",  "logo-square"]}
    - districtsConfig[9] =  {modifiers: ["dark-blue",  "text-white",  "logo-rectangle"]}
    - districtsConfig[10] = {modifiers: ["light-blue", "text-red",    "logo-rectangle"]}
    - districtsConfig[11] = {modifiers: ["yellow",     "text-red",    "logo-rectangle"]}
    - districtsConfig[12] = {modifiers: ["salmon",     "text-white",  "logo-square"]}
    - districtsConfig[13] = {modifiers: ["salmon",     "text-white"]}
    - districtsConfig[14] = {modifiers: ["light-blue", "text-red"]}
    - districtsConfig[15] = {modifiers: ["dark-blue",  "text-white",  "logo-square"]}
    - districtsConfig[16] = {modifiers: ["dark-blue",  "text-white"]}
    - districtsConfig[17] = {modifiers: ["light-blue", "text-blue"]}
    - districtsConfig[18] = {modifiers: ["salmon",     "text-white",  "logo-square"]}
    - districtsConfig[19] = {modifiers: ["light-blue", "text-blue",   "logo-square"]}
    - districtsConfig[20] = {modifiers: ["salmon",     "text-white",  "logo-square"]}
    - data.modifiers = data.modifiers.concat(districtsConfig[data.arrondissement].modifiers)
  header.rheader(class=data.modifiers role="banner")
    .rheader-wrapper
      a.rheader-logo(href=data.logo.href title=data.logo.title)
        .rheader-logo-nef: include ../../../assets/images/modules/rheader/nef.svg
        if data.logo.h1
          h1.rheader-logo-paris
            include ../../../assets/images/modules/rheader/paris.svg
            .hidden-accessibly= data.logo.text
        else
          .rheader-logo-paris
            include ../../../assets/images/modules/rheader/paris.svg
            .hidden-accessibly= data.logo.text
        if data.arrondissement
          .rheader-logo-mairie(style="background-image: url(/modules/rheader/images/mairie-#{data.arrondissement}.jpg)")
      if data.locales
        ul.rheader-locales
          each locale in data.locales
            li
              a(href=locale.href lang=locale.lang title=locale.text class=(locale.current ? 'current' : null) target=locale.target)
                if locale.current
                  strong= locale.lang
                else
                  = locale.lang
      if data.buttons.search
        a.rheader-button.rheader-button-search(href=data.buttons.search.href title=data.buttons.search.text target=data.buttons.search.target aria-controls="rheader-search" role="button" class=data.buttons.search.current ? 'active' : null)
          if data.buttons.search.icon
            i.rheader-button-icon(class="icon-#{data.buttons.search.icon}")
      if data.buttons.around
        a.rheader-button.rheader-button-around(href=data.buttons.around.href title=data.buttons.around.text target=data.buttons.around.target role="button")
          if data.buttons.around.icon
            i.rheader-button-icon(class="icon-#{data.buttons.around.icon}")
            span.rheader-button-text= data.buttons.around.text
      a.rheader-button.rheader-button-menu#nav-toggle(href=data.buttons.menu.href target=data.buttons.menu.target rel="nofollow" role="button")
        span.rheader-button-text= data.buttons.menu.text
      nav.rheader-nav#navigation(aria-label=data.navigation_label tabindex="-1" role="navigation")
        ul
          each item in data.items
            - var tag = item.current ? "strong" : "span"
            li.rheader-nav-item(class=item.modifiers class=(item.current ? "current" : null))
              a(href=item.href target=item.target aria-label=(item.hover ? item.text + " " + item.hover : null))
                if item.icon
                  i.rheader-nav-item-icon(class="icon-#{item.icon}" aria-hidden="true")
                if item.hover
                  #{tag}.rheader-nav-item-front: span.rheader-nav-item-text= item.text
                  #{tag}.rheader-nav-item-back: span.rheader-nav-item-hover= item.hover
                else
                  #{tag}.rheader-nav-item-text= item.text
    if data.modifiers && data.modifiers.indexOf("standalone") !== -1
      +rheader-mobile-nav(data)
  if data.quick_access
    - var quick_access = JSON.parse(JSON.stringify(data.quick_access)) // clone the data object
    - quick_access.id = "rheader-search"
    +quick-access(quick_access)

//- This mixin is used to render the mobile-nav server-side, when JS is disabled client-side
mixin rheader-mobile-nav(data)
  .rheader-mobile-nav#rheader-mobile-nav
    if data.locales
      ul.rheader-locales
        each locale in data.locales
          li
            a(href=locale.href class=(locale.current ? 'current' : null) target=locale.target)= locale.text
    ul.rheader-nav
      each item in data.items
        if item.modifiers && item.modifiers.indexOf("account") !== -1 && data.buttons.around
          li.rheader-nav-item.around
            a.rheader-button.rheader-button-around(href=data.buttons.around.href title=data.buttons.around.text target=data.buttons.around.target)
              if data.buttons.around.icon
                i.rheader-button-icon(class="icon-#{data.buttons.around.icon}")
                span.rheader-button-text= data.buttons.around.text
        li.rheader-nav-item(class=item.modifiers class=(item.current ? "current" : null))
          a(href=item.href target=item.target)
            if item.icon
              i.rheader-nav-item-icon(class="icon-#{item.icon}")
            if item.hover
              span.rheader-nav-item-front: span.rheader-nav-item-text= item.text
              span.rheader-nav-item-back: span.rheader-nav-item-hover= item.hover
            else
              span.rheader-nav-item-text= item.text
